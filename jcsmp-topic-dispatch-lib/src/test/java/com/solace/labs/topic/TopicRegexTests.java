/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.solace.labs.topic;

import java.util.regex.Pattern;

import org.junit.BeforeClass;
import org.junit.Test;

/** Compares the results of topic matching of both regular and regex subs */
public class TopicRegexTests {
	    
	@BeforeClass
	public static void populateData() {
	}
	
    @Test
    public void topicLinearMatchingValidation() {
    	System.out.println("Linear:");
    	Sub sub = new Sub("a/b*/c/#");
    	System.out.println(sub);
    	String
    	topic = "a/b/c";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a/bb/c";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a/bb/cc";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a/bb/c/d";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a/cb/c/d/e/f";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a/b/c/";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "/a/b/c";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a/b/c/d/e/f";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	
    	sub = new Sub("*/#");
    	System.out.println(sub);
    	topic = "a/b/c";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a/b";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a/bb/c";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a/bb/cc";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a/bb/c/d";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a/cb/c/d/e/f";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a/b/c/";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "/a/b/c";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    	topic = "a/b/c/d/e/f";
    	System.out.printf("%s %b%n", topic, sub.matches(topic));
    }
	
    @Test
    public void topicRegexMatchingValidation() {
    	System.out.println("Regex:");
    	String sub = "a/b*/c/#";
    	String regex = TopicUtils.buildSubRegex(sub);
    	System.out.println(regex);
    	Pattern p = TopicUtils.buildSubRegexPattern(sub);
    	
    	String
    	topic = "a/b/c";
    	System.out.printf("%s %b%n", topic, p.matcher(topic).matches());
    	topic = "a/bb/c";
    	System.out.printf("%s %b%n", topic, p.matcher(topic).matches());
    	topic = "a/bb/cc";
    	System.out.printf("%s %b%n", topic, p.matcher(topic).matches());
    	topic = "a/bb/c/d";
    	System.out.printf("%s %b%n", topic, p.matcher(topic).matches());
    	topic = "a/cb/c/d/e/f";
    	System.out.printf("%s %b%n", topic, p.matcher(topic).matches());
    	topic = "a/b/c/";
    	System.out.printf("%s %b%n", topic, p.matcher(topic).matches());
    	topic = "/a/b/c";
    	System.out.printf("%s %b%n", topic, p.matcher(topic).matches());
    	topic = "a/b/c/d/e/f";
    	System.out.printf("%s %b%n", topic, p.matcher(topic).matches());
    	
    	
//    	sub = "a/#";
//    	regex = TopicUtils.buildSubRegex(sub);
//    	p = Pattern.compile(regex);

    
//    	sub = ">";
//    	regex = TopicUtils.buildSubRegex(sub);
//    	p = Pattern.compile(regex);
    	
    	
    	new Sub(">");
    	new Sub("a/>");
    	new Sub("#");
		/* Sub s = */ new Sub("a/#");
//    	System.out.println(s.toSolaceSubscription());
    	new Sub("*");
    	new Sub("a/*");
    	new Sub("*/*");
    	
    	new Sub("#P2P/>");
    	new Sub("#P2P/#");
    	
    	new Sub("a/b#");
    }

}
